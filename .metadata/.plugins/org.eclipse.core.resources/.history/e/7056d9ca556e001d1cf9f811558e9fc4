package main;

import java.util.ArrayList;
import java.util.Arrays;

public class Store {
	public static final int MAX_NUMBER_IN_STORE = 10000;
	private DigitalVideoDisc itemsInStore[] = new DigitalVideoDisc[MAX_NUMBER_IN_STORE];
	private int qtyInStore = 0;
	public String addDVD(DigitalVideoDisc disc) {
		if(qtyInStore == MAX_NUMBER_IN_STORE) {
			return "The cart is full. You can't add any DVDs now";
		}
		else {
			itemsInStore[qtyInStore] = disc;
			qtyInStore += 1;
			if(qtyInStore == MAX_NUMBER_IN_STORE) {
				return "The disc has been added to the store. The store's list is full.";
			}
			else if(qtyInStore == MAX_NUMBER_IN_STORE - 1) {
				return "The disc has been added to the store. The cart is almost full.";
			}
			else {
				return "The disc has been added to the store.";
			}
		}
	}
	public String removeDigitalVideoDisc(DigitalVideoDisc disc) {
		if(qtyInStore == 0) {
			return "The cart is empty.";
		}
		else {
			ArrayList<DigitalVideoDisc> itemsOrderedList = new ArrayList<DigitalVideoDisc>(Arrays.asList(itemsInStore));  
			for(int i = 0; i < qtyInStore; i++) {
				if(itemsInStore[i].getTitle().equals(disc.getTitle())
						&& itemsInStore[i].getCategory().equals(disc.getCategory())
						&& itemsInStore[i].getDirector().equals(disc.getDirector())
						&& itemsInStore[i].getLength() == disc.getLength()
						&& itemsInStore[i].getCost() == disc.getCost()) {
					itemsOrderedList.remove(i);
					itemsInStore = itemsOrderedList.toArray(itemsInStore);
					qtyInStore -= 1;
					return "The disc has been removed.";
				}
			}
			if(qtyInStore == 0) {
				return "The cart now is empty";
			}
			return "The disc hasn't been in the cart";
		}
	}
}
